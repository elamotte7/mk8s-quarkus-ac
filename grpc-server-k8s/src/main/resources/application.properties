quarkus.http.port=3000

## gRPC server
quarkus.grpc.server.port=3001
quarkus.grpc.server.enable-reflection-service=true

# Generate docker native image
%microk8s.quarkus.native.container-build=true

# docker image
%microk8s.quarkus.container-image.group=${K8S_REGISTRY_USERNAME:elamotte}
%microk8s.quarkus.container-image.tag=${quarkus.application.version}
%microk8s.quarkus.container-image.name=${quarkus.application.name}
%microk8s.quarkus.container-image.push=true
%microk8s.quarkus.container-image.build=true

# Registry
%microk8s.quarkus.container-image.registry=${K8S_REGISTRY_URL:docker.io}
%microk8s.quarkus.container-image.insecure=true
%microk8s.quarkus.container-image.username=${K8S_REGISTRY_USERNAME:elamotte}
%microk8s.quarkus.container-image.password=${K8S_REGISTRY_PASSWORD:XXXXXXX}

# Kubernetes
%microk8s.quarkus.kubernetes-client.master-url=https://192.168.64.2:16443
%microk8s.quarkus.kubernetes-client.trust-certs=true
%microk8s.quarkus.kubernetes-client.namespace=quarkus-apero-code
%microk8s.quarkus.kubernetes.deployment-target=${DEPLOYMENT_TARGET:kubernetes}
%microk8s.quarkus.kubernetes.image-pull-policy=${PULL_POLICY:Always}
%microk8s.quarkus.kubernetes.image-pull-secrets=${K8S_REGISTRY_PASSWORD:XXXXXXX}

# Expose via node
%microk8s.quarkus.kubernetes.service-type=node-port
%microk8s.quarkus.kubernetes.namespace=quarkus-apero-code

# readiness kubernetes
%microk8s.quarkus.kubernetes.readiness-probe.initial-delay=10s
%microk8s.quarkus.kubernetes.readiness-probe.period=20s

# Config map
#%microk8s.quarkus.kubernetes-config.enabled=true
#%microk8s.quarkus.kubernetes-config.config-maps=grpc-server-config
