quarkus.http.port=4000

## gRPC client for hello-service
quarkus.grpc.clients.hello-service.host=${GRPC_CLIENT_HELLO_SERVICE_HOST:grpc-server-k8s}
quarkus.grpc.clients.hello-service.port=${GRPC_CLIENT_HELLO_SERVICE_PORT:9000}

# Generate docker native image
quarkus.native.container-build=true

# docker image
quarkus.container-image.group=elamotte
quarkus.container-image.tag=1.0-SNAPSHOT
quarkus.container-image.name=grpc-client-k8s
%dev.quarkus.container-image.push=true
%dev.quarkus.container-image.build=true

# Registry
quarkus.container-image.registry=${K8S_REGISTRY_URL:docker.io}
quarkus.container-image.insecure=true
quarkus.container-image.username=${K8S_REGISTRY_USERNAME:elamotte}
quarkus.container-image.password=${K8S_REGISTRY_PASSWORD:XXXXXXX}

# Kubernetes client
quarkus.kubernetes-client.master-url=${K8S_CLIENT_MASTER_URL:https://192.168.64.2:16443}
quarkus.kubernetes-client.trust-certs=${K8S_CLIENTMASTER_URL:true}

# Kubernetes client
quarkus.kubernetes.deployment-target=${DEPLOYMENT_TARGET:kubernetes}
quarkus.kubernetes.image-pull-policy=${PULL_POLICY:Always}
quarkus.kubernetes.image-pull-secrets=${K8S_REGISTRY_PASSWORD:XXXXXXX}
# Expose via node
quarkus.kubernetes.service-type=node-port
#quarkus.kubernetes.namespace=quarkus-apero-code

# readiness kubernetes
quarkus.kubernetes.readiness-probe.initial-delay=10s
quarkus.kubernetes.readiness-probe.period=20s
